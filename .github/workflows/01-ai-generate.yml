# .github/workflows/01-ai-generate.yml
name: Generate Website Configuration

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Describe your website'
        required: true
        type: string
      industry:
        description: 'Industry type'
        required: false
        type: string
        default: 'auto-detect'
  workflow_call:
    inputs:
      prompt:
        required: true
        type: string
      industry:
        required: false
        type: string
        default: 'auto-detect'
    outputs:
      config_artifact:
        description: "Generated website configuration"
        value: ${{ jobs.generate.outputs.artifact_id }}

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      artifact_id: ${{ steps.upload.outputs.artifact-id }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Generate website configuration
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -euo pipefail
          
          echo "Starting AI generation process..."
          echo "Prompt: ${{ inputs.prompt }}"
          echo "Industry: ${{ inputs.industry }}"
          
          # Validate API key exists
          if [ -z "${OPENAI_API_KEY:-}" ]; then
            echo "ERROR: OPENAI_API_KEY is not set"
            exit 1
          fi
          
          echo "API key is present (length: ${#OPENAI_API_KEY})"
          
          # Create system prompt file
          cat > system_prompt.txt << 'EOF'
          You are a professional web designer. Return valid JSON with these exact keys: {"slug": "business-name-in-kebab-case", "name": "Business Name", "tagline": "tagline", "industry": "industry", "colorPalette": {"primary":"#hex","secondary":"#hex","accent":"#hex"}, "typography": {"headingFont":"Font","bodyFont":"Font"}, "heroSection": {"customHTML":"<div class=\"text-center\">HTML</div>","heroImage":"https://images.unsplash.com/photo-1497366216548-37526070297c?w=1600&h=900&fit=crop"}, "customSections": [{"title":"Section","html":"<section>HTML</section>"}]}

          IMPORTANT: For heroImage, you must use this exact format with a real Unsplash photo ID: https://images.unsplash.com/photo-[PHOTOID]?w=1600&h=900&fit=crop

          Use these real Unsplash photo IDs based on industry:
          - law-firm: photo-1589829545856-d10d557cf95f
          - restaurant: photo-1414235077428-338989a2e8c0  
          - yoga-studio: photo-1506905925346-21bda4d32df4
          - photography: photo-1452587925148-ce544e77e70d
          - consulting: photo-1497366216548-37526070297c
          - medical: photo-1559757148-5c350d0d3c56
          - retail: photo-1441986300917-64674bd600d8
          - real-estate: photo-1560518883-ce09059eeffa
          - technology: photo-1518770660439-4636190af475
          - bakery: photo-1517433670267-08bbd4be890f
          EOF
          
          # Create payload using jq to ensure proper JSON escaping
          SYSTEM_PROMPT=$(cat system_prompt.txt)
          USER_PROMPT="Create website config for: ${{ inputs.prompt }} Industry: ${{ inputs.industry }}"
          
          jq -n \
            --arg model "gpt-4o" \
            --arg system_content "$SYSTEM_PROMPT" \
            --arg user_content "$USER_PROMPT" \
            '{
              model: $model,
              response_format: {type: "json_object"},
              temperature: 0.3,
              max_tokens: 4000,
              messages: [
                {role: "system", content: $system_content},
                {role: "user", content: $user_content}
              ]
            }' > payload.json
          
          echo "Calling OpenAI API..."
          
          # Call OpenAI API with better error handling
          HTTP_CODE=$(curl -w "%{http_code}" -o api_response.json -s \
            -X POST "https://api.openai.com/v1/chat/completions" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @payload.json)
          
          echo "HTTP Status Code: $HTTP_CODE"
          
          if [ "$HTTP_CODE" != "200" ]; then
            echo "API call failed with status $HTTP_CODE"
            echo "Response body:"
            cat api_response.json || echo "Could not read response"
            echo "Using fallback configuration..."
            USE_FALLBACK=true
          else
            echo "API call successful"
            echo "Raw API response:"
            cat api_response.json
            USE_FALLBACK=false
          fi
          
          # Process response
          if [ "$USE_FALLBACK" = "false" ]; then
            if jq -e '.choices[0].message.content' api_response.json > /dev/null 2>&1; then
              echo "Extracting AI content..."
              jq -r '.choices[0].message.content' api_response.json > website.json
              
              # Validate the extracted JSON
              if jq empty website.json 2>/dev/null; then
                echo "Generated valid JSON:"
                jq '.' website.json
              else
                echo "Generated invalid JSON, using fallback"
                USE_FALLBACK=true
              fi
            else
              echo "No content in API response, using fallback"
              USE_FALLBACK=true
            fi
          fi
          
          # Use fallback if needed
          if [ "$USE_FALLBACK" = "true" ]; then
            echo "Creating fallback configuration..."
            echo '{"slug":"business-site","name":"Your Business","tagline":"Professional services you can trust","industry":"business","colorPalette":{"primary":"#2563eb","secondary":"#3b82f6","accent":"#1d4ed8"},"typography":{"headingFont":"Inter","bodyFont":"Inter"},"heroSection":{"customHTML":"<div class=\"text-center\"><h1 class=\"text-5xl font-bold mb-6 text-white\">Your Business</h1><p class=\"text-xl mb-8 text-gray-100\">Professional services</p><a href=\"#contact\" class=\"btn btn-primary\">Get Started</a></div>","heroImage":"https://images.unsplash.com/photo-1497366216548-37526070297c?w=1200&h=800"},"customSections":[{"title":"About","html":"<section class=\"py-16\"><h2 class=\"text-3xl font-bold text-center mb-8\">About Us</h2><p class=\"text-center\">Professional services.</p></section>"}]}' > website.json
          fi
          
          echo "Final configuration:"
          jq '.' website.json
          
          echo "AI generation complete!"
      
      - name: Upload configuration
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: website-config-${{ github.run_id }}
          path: website.json
          retention-days: 1
          name: website-config-${{ github.run_id }}
          path: website.json
          retention-days: 1
