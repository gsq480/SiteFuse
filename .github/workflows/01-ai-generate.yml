# .github/workflows/01-ai-generate.yml
name: Generate Website Configuration

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: "Describe your website"
        required: true
        type: string
      industry:
        description: "Industry type"
        required: false
        type: string
        default: "auto-detect"
  workflow_call:
    inputs:
      prompt:
        required: true
        type: string
      industry:
        required: false
        type: string
        default: "auto-detect"
    outputs:
      config_artifact:
        description: "Generated website configuration"
        value: ${{ jobs.generate.outputs.artifact_id }}

jobs:
  generate:
    runs-on: ubuntu-latest
    outputs:
      artifact_id: ${{ steps.upload.outputs.artifact-id }}
    steps:
      - uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Build system prompt
        run: |
          cat > system_prompt.txt << 'EOF'
          You are a professional web designer. Return valid JSON with these exact keys:
          {
            "slug": "business-name-in-kebab-case",
            "name": "Business Name",
            "tagline": "tagline",
            "industry": "industry",
            "colorPalette": {"primary":"#hex","secondary":"#hex","accent":"#hex"},
            "typography": {"headingFont":"Font","bodyFont":"Font"},
            "heroSection": {
              "customHTML":"<div class=\"text-center\">HTML</div>",
              "heroImage":"https://images.unsplash.com/photo-[PHOTOID]?w=1600&h=900&fit=crop"
            },
            "customSections": [{"title":"Section","html":"<section>HTML</section>"}]
          }

          For heroImage use a real Unsplash id in the format above. Use these ids by industry:
          law-firm: photo-1589829545856-d10d557cf95f
          restaurant: photo-1414235077428-338989a2e8c0
          yoga-studio: photo-1506905925346-21bda4d32df4
          photography: photo-1452587925148-ce544e77e70d
          consulting: photo-1497366216548-37526070297c
          medical: photo-1559757148-5c350d0d3c56
          retail: photo-1441986300917-64674bd600d8
          real-estate: photo-1560518883-ce09059eeffa
          technology: photo-1518770660439-4636190af475
          bakery: photo-1517433670267-08bbd4be890f
          EOF

      - name: Call OpenAI (Chat Completions)
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PROMPT: ${{ inputs.prompt }}
          INDUSTRY: ${{ inputs.industry }}
        run: |
          set -euo pipefail
          test -n "${OPENAI_API_KEY:-}" || { echo "OPENAI_API_KEY missing"; exit 1; }

          jq -n \
            --arg model "gpt-4o" \
            --arg system "$(cat system_prompt.txt)" \
            --arg user "Create website config for: ${PROMPT} (industry: ${INDUSTRY})" \
            '{
              model: $model,
              response_format: {type: "json_object"},
              temperature: 0.3,
              max_tokens: 4000,
              messages: [
                {role: "system", content: $system},
                {role: "user", content: $user}
              ]
            }' > payload.json

          HTTP_CODE=$(curl -sS -w "%{http_code}" -o api_response.json \
            -H "Authorization: Bearer ${OPENAI_API_KEY}" \
            -H "Content-Type: application/json" \
            -X POST https://api.openai.com/v1/chat/completions \
            -d @payload.json)

          echo "HTTP ${HTTP_CODE}"
          if [ "${HTTP_CODE}" != "200" ]; then
            echo "API error"
            echo "::group::Response body"; cat api_response.json || true; echo "::endgroup::"
            echo "USE_FALLBACK=true" >> $GITHUB_ENV
          else
            echo "USE_FALLBACK=false" >> $GITHUB_ENV
          fi

      - name: Extract and validate JSON
        if: env.USE_FALLBACK == 'false'
        run: |
          set -euo pipefail
          jq -er '.choices[0].message.content' api_response.json > website.raw
          sed -E 's/^```json[[:space:]]*$//; s/^```[[:space:]]*$//; s/```[[:space:]]*$//' website.raw > website.json || true
          if ! jq empty website.json 2>/dev/null; then
            echo "Model returned invalid JSON"
            echo "USE_FALLBACK=true" >> $GITHUB_ENV
          fi

      - name: Normalise fields (colours, whitespace)
        if: env.USE_FALLBACK == 'false'
        run: |
          set -euo pipefail
          jq '
            .colorPalette.primary   |= (tostring | gsub("\\s";"")) |
            .colorPalette.secondary |= (tostring | gsub("\\s";"")) |
            .colorPalette.accent    |= (tostring | gsub("\\s";""))
          ' website.json > website.clean.json
          mv website.clean.json website.json

          jq -n --slurpfile w website.json '
            ($w[0] // {}) as $x |
            {
              slug:       ($x.slug       // "business-site"),
              name:       ($x.name       // "Your Business"),
              tagline:    ($x.tagline    // "Professional services you can trust"),
              industry:   ($x.industry   // "business"),
              colorPalette: {
                primary:   ($x.colorPalette.primary   // "#2563eb"),
                secondary: ($x.colorPalette.secondary // "#3b82f6"),
                accent:    ($x.colorPalette.accent    // "#1d4ed8")
              },
              typography: {
                headingFont: ($x.typography.headingFont // "Inter"),
                bodyFont:    ($x.typography.bodyFont    // "Inter")
              },
              heroSection: {
                customHTML: ($x.heroSection.customHTML // "<div class=\"text-center\"><h1 class=\"text-5xl font-bold mb-6 text-white\">Your Business</h1><p class=\"text-xl mb-8 text-gray-100\">Professional services</p><a href=\"#contact\" class=\"btn btn-primary\">Get Started</a></div>"),
                heroImage:  ($x.heroSection.heroImage  // "https://images.unsplash.com/photo-1497366216548-37526070297c?w=1600&h=900&fit=crop")
              },
              customSections: (
                ($x.customSections // [ {title:"About", html:"<section class=\"py-16\"><div class=\"container\"><h2 class=\"section-title text-center\">About Us</h2><p class=\"text-center\">Professional services.</p></div></section>"} ])
              )
            }' > website.normalised.json

          mv website.normalised.json website.json
          echo "::group::Final configuration"; jq . website.json; echo "::endgroup::"

      - name: Create fallback configuration
        if: env.USE_FALLBACK == 'true'
        run: |
          cat > website.json << 'JSON'
          {
            "slug":"business-site",
            "name":"Your Business",
            "tagline":"Professional services you can trust",
            "industry":"business",
            "colorPalette":{"primary":"#2563eb","secondary":"#3b82f6","accent":"#1d4ed8"},
            "typography":{"headingFont":"Inter","bodyFont":"Inter"},
            "heroSection":{
              "customHTML":"<div class=\"text-center\"><h1 class=\"text-5xl font-bold mb-6 text-white\">Your Business</h1><p class=\"text-xl mb-8 text-gray-100\">Professional services</p><a href=\"#contact\" class=\"btn btn-primary\">Get Started</a></div>",
              "heroImage":"https://images.unsplash.com/photo-1497366216548-37526070297c?w=1600&h=900&fit=crop"
            },
            "customSections":[
              {"title":"About","html":"<section class=\"py-16\"><div class=\"container\"><h2 class=\"section-title text-center\">About Us</h2><p class=\"text-center\">Professional services.</p></div></section>"}
            ]
          }
          JSON
          echo "::group::Fallback configuration"; jq . website.json; echo "::endgroup::"

      - name: Upload configuration
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: website-config-${{ github.run_id }}
          path: website.json
          retention-days: 1
          name: website-config-${{ github.run_id }}
          path: website.json
          retention-days: 1
