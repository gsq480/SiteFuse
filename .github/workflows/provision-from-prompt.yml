name: Provision Child Theme from Prompt

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: "Customer brief (free text)"
        required: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      CLOUDWAYS_HOST:    ${{ secrets.CLOUDWAYS_HOST }}
      CLOUDWAYS_USER:    ${{ secrets.CLOUDWAYS_USER }}
      CLOUDWAYS_KEY:     ${{ secrets.CLOUDWAYS_SSH_KEY }}
      DEPLOY_PATH:       ${{ secrets.DEPLOY_PATH }}       # /home/.../public_html/wp-content/themes/sitefuse-agency
      APP_PATH:          ${{ secrets.APP_PATH }}          # /home/.../public_html
      OPENAI_API_KEY:    ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: SSH setup
        run: |
          set -e
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          printf '%s\n' "$CLOUDWAYS_KEY" > ~/.ssh/cloudways_id
          chmod 600 ~/.ssh/cloudways_id
          ssh-keyscan -H "$CLOUDWAYS_HOST" >> ~/.ssh/known_hosts

      - name: Interpret customer brief with OpenAI → theme spec (JSON)
        id: spec
        run: |
          set -euo pipefail
          P=${{ toJSON(inputs.prompt) }}
          # Ask for a compact JSON spec the workflow can consume
          RESP="$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @- <<EOF
          {
            "model": "gpt-4o-mini",
            "temperature": 0.4,
            "messages": [
              {"role":"system","content":"Extract a website theme spec from the user brief and return STRICT JSON only."},
              {"role":"user","content": ${P} },
              {"role":"user","content":"Return JSON with keys: slug (kebab-case), name, brand (hex), accent (hex), slogan, intro (short), hero (https URL). If any are missing, infer sensible defaults. Output ONLY JSON."}
            ]
          }
EOF
          )"
          echo "$RESP" | jq -r '.choices[0].message.content' > spec.json

          # Fallbacks & validation
          SLUG=$(jq -r '.slug // empty' spec.json | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9\-]/-/g;s/--\+/-/g;s/^-//;s/-$//')
          NAME=$(jq -r '.name // empty' spec.json)
          BRAND=$(jq -r '.brand // "#3B5BDB"' spec.json)
          ACCENT=$(jq -r '.accent // "#FFD43B"' spec.json)
          SLOGAN=$(jq -r '.slogan // "Canberra's best coffee — just try it."' spec.json)
          INTRO=$(jq -r '.intro // "Hand-roasted beans, daily bakes, and friendly faces in Kingston."' spec.json)
          HERO=$(jq -r '.hero // "https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?q=80&w=1600&auto=format&fit=crop"' spec.json)

          # Ensure slug & name exist
          if [ -z "$SLUG" ]; then SLUG="site-${RANDOM}"; fi
          if [ -z "$NAME" ]; then NAME="New Site"; fi

          echo "slug=$SLUG"   >> $GITHUB_OUTPUT
          echo "name=$NAME"   >> $GITHUB_OUTPUT
          echo "brand=$BRAND" >> $GITHUB_OUTPUT
          echo "accent=$ACCENT" >> $GITHUB_OUTPUT
          echo "slogan=$SLOGAN" >> $GITHUB_OUTPUT
          echo "intro=$INTRO" >> $GITHUB_OUTPUT
          echo "hero=$HERO"   >> $GITHUB_OUTPUT

          echo "Spec:"
          cat spec.json
          echo "::notice title=Theme Spec::slug=$SLUG, name=$NAME, brand=$BRAND, accent=$ACCENT"

      - name: Generate child theme, build Tailwind v4, zip
        env:
          SLUG:   ${{ steps.spec.outputs.slug }}
          NAME:   ${{ steps.spec.outputs.name }}
          BRAND:  ${{ steps.spec.outputs.brand }}
          ACCENT: ${{ steps.spec.outputs.accent }}
          SLOGAN: ${{ steps.spec.outputs.slogan }}
          INTRO:  ${{ steps.spec.outputs.intro }}
          HERO:   ${{ steps.spec.outputs.hero }}
        run: |
          set -euo pipefail
          WORKDIR="$(mktemp -d)"; echo "Workdir: $WORKDIR"; cd "$WORKDIR"

          mkdir -p child/assets/css child/assets/img child/dist
          cat > child/style.css <<CSS
          /*
          Theme Name: ${NAME} Child
          Template: sitefuse-agency
          Text Domain: ${SLUG}-child
          Version: 1.0.0
          */
          CSS

          cat > child/functions.php <<'PHP'
          <?php
          add_action('wp_enqueue_scripts', function () {
            $parent = get_template_directory_uri() . '/dist/tailwind.css';
            wp_enqueue_style('sitefuse-parent', $parent, [], null);
            $child_path = get_stylesheet_directory() . '/dist/tailwind.css';
            $ver = file_exists($child_path) ? filemtime($child_path) : null;
            wp_enqueue_style('sitefuse-child', get_stylesheet_directory_uri() . '/dist/tailwind.css', ['sitefuse-parent'], $ver);
          });
          PHP

          # Tailwind tokens + utilities
          cat > child/assets/css/tailwind.css <<CSS
          @import "tailwindcss";
          @theme {
            --color-brand: ${BRAND};
            --color-accent: ${ACCENT};
            --color-cream: #FFF7EC;
          }
          .container { @apply mx-auto max-w-6xl; }
          .btn { @apply inline-flex items-center justify-center rounded-lg px-5 py-2 font-semibold; }
          .btn-primary { @apply btn bg-[--color-brand] text-white hover:opacity-90; }
          .card { @apply bg-white rounded-xl shadow p-8 border border-slate-100; }
          .section-title { @apply text-2xl md:text-3xl font-extrabold tracking-tight; }
          .lead { @apply text-lg text-slate-700; }
          CSS

          # Header / Footer
          cat > child/header.php <<'PHP'
          <!doctype html>
          <html <?php language_attributes(); ?>>
          <head>
            <meta charset="<?php bloginfo('charset'); ?>">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <?php wp_head(); ?>
          </head>
          <body <?php body_class('bg-[--color-cream] text-slate-900 font-sans'); ?>>
          <a class="sr-only focus:not-sr-only focus:absolute focus:top-2 focus:left-2 p-2 bg-white rounded" href="#main">Skip to content</a>
          <header class="bg-white/90 backdrop-blur border-b">
            <div class="container px-4 py-4 flex items-center justify-between">
              <a class="text-xl font-extrabold tracking-tight text-[--color-brand]" href="<?php echo esc_url(home_url('/')); ?>"><?php bloginfo('name'); ?></a>
              <nav class="hidden md:block">
                <?php wp_nav_menu(['theme_location'=>'primary','menu_class'=>'md:flex md:items-center md:gap-6','container'=>false,'fallback_cb'=>'__return_empty_string']); ?>
              </nav>
            </div>
          </header>
          PHP

          cat > child/footer.php <<'PHP'
          <footer class="mt-16 bg-slate-900 text-slate-200">
            <div class="container px-4 py-10 grid gap-6 md:grid-cols-3">
              <div><div class="text-lg font-semibold">About</div><p class="text-sm opacity-80 mt-2">Neighbourhood coffee, fresh bakes, warm service.</p></div>
              <div><div class="text-lg font-semibold">Hours</div><ul class="text-sm opacity-80 mt-2 space-y-1"><li>Mon–Fri 7–3</li><li>Sat–Sun 8–2</li></ul></div>
              <div><div class="text-lg font-semibold">Find us</div><p class="text-sm opacity-80 mt-2">Kingston, Canberra</p></div>
            </div>
            <div class="border-t border-slate-800"><div class="container px-4 py-4 text-sm opacity-70 flex justify-between"><span>© <?php echo date('Y'); ?> <?php bloginfo('name'); ?></span><span>Powered by WordPress</span></div></div>
          </footer>
          <?php wp_footer(); ?>
          </body>
          </html>
          PHP

          # Hero + sections with your AI-driven text
          cat > child/front-page.php <<PHP
          <?php get_header(); ?>
          <main id="main" class="container px-4 py-10 space-y-12">
            <section class="relative overflow-hidden rounded-2xl bg-gradient-to-r from-[--color-brand] to-[--color-accent] text-white">
              <div class="px-6 py-16 md:px-12 md:py-24 grid md:grid-cols-2 gap-8 items-center">
                <div>
                  <h1 class="text-3xl md:text-5xl font-extrabold tracking-tight"><?php echo esc_html('${SLOGAN}'); ?></h1>
                  <p class="mt-4 lead text-white/90"><?php echo esc_html('${INTRO}'); ?></p>
                  <div class="mt-8 flex gap-4">
                    <a href="<?php echo esc_url(home_url('/menu')); ?>" class="btn-primary">View menu</a>
                    <a href="<?php echo esc_url(home_url('/contact')); ?>" class="btn ring-1 ring-inset ring-white/60 text-white">Book a table</a>
                  </div>
                </div>
                <div class="rounded-xl overflow-hidden shadow">
                  <img src="<?php echo esc_url( get_stylesheet_directory_uri() . '/assets/img/hero.jpg' ); ?>" alt="Coffee" class="w-full h-full object-cover">
                </div>
              </div>
            </section>
            <section class="grid md:grid-cols-3 gap-6">
              <article class="card"><h3 class="font-bold text-lg">Kingston locals</h3><p class="mt-2 text-sm text-slate-600">Brewed for Canberra taste—balanced, bright, and consistent.</p></article>
              <article class="card"><h3 class="font-bold text-lg">Daily bakes</h3><p class="mt-2 text-sm text-slate-600">Croissants & seasonal bakes, fresh every morning.</p></article>
              <article class="card"><h3 class="font-bold text-lg">Proper coffee</h3><p class="mt-2 text-sm text-slate-600">House blend espresso, rotating single origins.</p></article>
            </section>
          </main>
          <?php get_footer(); ?>
          PHP

          # Assets
          curl -fsSL "${HERO}" -o child/assets/img/hero.jpg || true

          # Tailwind v4 CLI (bring our own binary)
          curl -fsSL https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64 -o /usr/local/bin/tailwindcss
          chmod +x /usr/local/bin/tailwindcss
          tailwindcss -i child/assets/css/tailwind.css -o child/dist/tailwind.css --minify

          (cd child && zip -qr "../${SLUG}-child.zip" .)
          ls -la

      - name: Deploy & activate on Cloudways
        env:
          SLUG: ${{ steps.spec.outputs.slug }}
        run: |
          set -e
          test -n "$APP_PATH" || { echo "APP_PATH secret missing"; exit 1; }

          THEMES_DIR="$(ssh -i ~/.ssh/cloudways_id -o BatchMode=yes ${CLOUDWAYS_USER}@${CLOUDWAYS_HOST} "dirname '${DEPLOY_PATH}'")"

          rsync -az --delete -e "ssh -i ~/.ssh/cloudways_id -o BatchMode=yes" \
            child/ "${CLOUDWAYS_USER}@${CLOUDWAYS_HOST}:${THEMES_DIR}/${SLUG}-child/"

          ssh -i ~/.ssh/cloudways_id -o BatchMode=yes ${CLOUDWAYS_USER}@${CLOUDWAYS_HOST} "
            cd '${APP_PATH}' &&
            wp theme enable '${SLUG}-child' --quiet || true &&
            wp theme activate '${SLUG}-child' --quiet
          "

      - name: Create/assign menu & set static front page (idempotent)
        env:
          NAME: ${{ steps.spec.outputs.name }}
        run: |
          set -e
          ssh -i ~/.ssh/cloudways_id -o BatchMode=yes ${CLOUDWAYS_USER}@${CLOUDWAYS_HOST} "
            cd '${APP_PATH}' &&
            (wp menu list --fields=name | grep -qx 'Primary' || wp menu create Primary) &&
            wp menu location assign Primary primary || true &&
            HOME_ID=\$(wp post list --post_type=page --name=home --field=ID || true)
            if [ -z \"\$HOME_ID\" ]; then
              HOME_ID=\$(wp post create --post_type=page --post_title='Home' --post_status=publish --porcelain)
            fi
            wp option update show_on_front page
            wp option update page_on_front \$HOME_ID
          "
