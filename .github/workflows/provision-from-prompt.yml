name: Provision Child Theme from Prompt

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: "Customer brief (free text)"
        required: true
        type: string

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      CLOUDWAYS_HOST: ${{ secrets.CLOUDWAYS_HOST }}
      CLOUDWAYS_USER: ${{ secrets.CLOUDWAYS_USER }}
      CLOUDWAYS_KEY: ${{ secrets.CLOUDWAYS_SSH_KEY }}
      DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
      APP_PATH: ${{ secrets.APP_PATH }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: SSH setup
        run: |
          set -e
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          printf '%s\n' "$CLOUDWAYS_KEY" > ~/.ssh/cloudways_id
          chmod 600 ~/.ssh/cloudways_id
          ssh-keyscan -H "$CLOUDWAYS_HOST" >> ~/.ssh/known_hosts

      - name: Interpret customer brief with OpenAI â†’ theme spec (JSON)
        id: spec
        run: |
          set -euo pipefail
          P='${{ inputs.prompt }}'
          # Ask for a compact JSON spec the workflow can consume
          RESP="$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @- <<EOF
          {
            "model": "gpt-4o-mini",
            "temperature": 0.4,
            "messages": [
              {"role":"system","content":"Extract a website theme spec from the user brief and return STRICT JSON only."},
              {"role":"user","content": "$P"},
              {"role":"user","content":"Return JSON with keys: slug (kebab-case), name, brand (hex), accent (hex), slogan, intro (short), hero (https URL). If any are missing, infer sensible defaults. Output ONLY JSON."}
            ]
          }
