name: Provision Child Theme from Prompt

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Describe your website (e.g., "Modern yoga studio with earth tones")'
        required: true
        type: string

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    env:
      CLOUDWAYS_HOST: ${{ secrets.CLOUDWAYS_HOST }}
      CLOUDWAYS_USER: ${{ secrets.CLOUDWAYS_USER }}
      CLOUDWAYS_KEY:  ${{ secrets.CLOUDWAYS_KEY }}
      DEPLOY_PATH:    ${{ secrets.DEPLOY_PATH }}
      APP_PATH:       ${{ secrets.APP_PATH }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: gsq480/SiteFuse
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: SSH setup
        run: |
          set -e
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          printf '%s\n' "$CLOUDWAYS_KEY" > ~/.ssh/id_rsa_cloudways
          chmod 600 ~/.ssh/id_rsa_cloudways
          ssh-keyscan -H "$CLOUDWAYS_HOST" >> ~/.ssh/known_hosts

      - name: Turn prompt into structured JSON (OpenAI)
        id: openai
        run: |
          set -e
          cat > /tmp/payload.json <<'JSON'
          {
            "model":"gpt-4o-mini",
            "response_format":{"type":"json_object"},
            "messages":[
              {"role":"system","content":"You extract website theming fields from a customer brief and respond in strict JSON only. Fields: slug (kebab-case, <=30 chars), name (<=40 chars), brand (hex like #7A5A45), accent (hex), hero (absolute image URL), sections (array of {title, text}). If missing, make tasteful defaults."},
              {"role":"user","content":"${{ github.event.inputs.prompt }}"}
            ]
          }
          JSON
          curl -sS https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d @/tmp/payload.json \
          | jq -r '.choices[0].message.content' > brief.json
          echo "Brief JSON:" && cat brief.json | jq .
          SLUG=$(jq -r '.slug // "new-site"' brief.json | tr '[:upper:] ' '[:lower:]-' | tr -cd 'a-z0-9-_')
          SLUG=${SLUG%-}; SLUG=${SLUG#-}; [ -n "$SLUG" ] || SLUG=new-site
          NAME=$(jq -r '.name // "New Site"' brief.json)
          BRAND=$(jq -r '.brand // "#7A5A45"' brief.json)
          ACCENT=$(jq -r '.accent // "#D2B48C"' brief.json)
          HERO=$(jq -r '.hero // "https://images.unsplash.com/photo-1504754524776-8f4f37790ca0?q=80&w=1200&auto=format&fit=crop"' brief.json)
          echo "slug=$SLUG"     >> $GITHUB_OUTPUT
          echo "name=$NAME"     >> $GITHUB_OUTPUT
          echo "brand=$BRAND"   >> $GITHUB_OUTPUT
          echo "accent=$ACCENT" >> $GITHUB_OUTPUT
          echo "hero=$HERO"     >> $GITHUB_OUTPUT

      - name: Generate child theme and build CSS
        env:
          SLUG:   ${{ steps.openai.outputs.slug }}
          NAME:   ${{ steps.openai.outputs.name }}
          BRAND:  ${{ steps.openai.outputs.brand }}
          ACCENT: ${{ steps.openai.outputs.accent }}
          HERO:   ${{ steps.openai.outputs.hero }}
        run: |
          set -euo pipefail
          WORKDIR="$(mktemp -d)"; echo "Workdir: $WORKDIR"; cd "$WORKDIR"
          mkdir -p child/assets/css child/assets/img child/dist child/parts
          # style.css
          cat > child/style.css <<CSS
          /*
          Theme Name: ${NAME} Child
          Template: sitefuse-base
          Text Domain: ${SLUG}-child
          Version: 1.0.0
          */
          CSS
          # functions.php
          cat > child/functions.php <<'PHP'
          <?php
          add_action('wp_enqueue_scripts', function () {
            $parent = get_template_directory_uri() . '/dist/tailwind.css';
            wp_enqueue_style('sitefuse-parent', $parent, [], null);
            $child_path = get_stylesheet_directory() . '/dist/tailwind.css';
            $ver = file_exists($child_path) ? filemtime($child_path) : null;
            wp_enqueue_style('sitefuse-child', get_stylesheet_directory_uri() . '/dist/tailwind.css', ['sitefuse-parent'], $ver);
          });
          register_nav_menus(['primary' => 'Primary']);
          PHP
          # Tailwind
          cat > child/assets/css/tailwind.css <<CSS
          @tailwind base;
          @tailwind components;
          @tailwind utilities;
          @layer base {
            :root {
              --color-brand: ${BRAND};
              --color-brand-600: ${BRAND}cc;
              --color-accent: ${ACCENT};
              --color-cream: #FFF7EC;
            }
          }
          CSS
          cat > child/tailwind.config.js <<JS
          module.exports = { content: ['./**/*.php'], theme: { extend: {} }, plugins: [] }
          JS
          # HERO download with safe fallback
          if [ -n "$HERO" ] && [ "$HERO" != "null" ]; then
            curl -fsSL "$HERO" -o child/assets/img/hero.jpg --max-time 10 || true
          fi
          if [ ! -s child/assets/img/hero.jpg ]; then
            echo "⚠️ HERO image failed, using fallback"
            echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mP8Xw8AAoMBg9Jzi10AAAAASUVORK5CYII=" \
              | base64 -d > child/assets/img/hero.jpg
          fi
          echo "Building Tailwind CSS..."
          curl -sL https://github.com/tailwindlabs/tailwindcss/releases/download/v3.4.1/tailwindcss-linux-x64 -o tailwindcss
          chmod +x tailwindcss
          cd child
          ../tailwindcss -i ./assets/css/tailwind.css -o ./dist/tailwind.css --minify
          cd ..
          zip -qr "${SLUG}-child.zip" child/
          cp -r child "$GITHUB_WORKSPACE/${SLUG}-child"
          echo "Theme generation complete!"

      - name: Commit generated theme back to repo
        run: |
          set -e
          if [ -d "${{ steps.openai.outputs.slug }}-child" ]; then
            mkdir -p child-themes
            rm -rf "child-themes/${{ steps.openai.outputs.slug }}-child"
            mv "${{ steps.openai.outputs.slug }}-child" "child-themes/${{ steps.openai.outputs.slug }}-child"
            git config user.name  "sitefuse-bot"
            git config user.email "bot@users.noreply.github.com"
            git add child-themes/${{ steps.openai.outputs.slug }}-child
            git commit -m "chore: update generated child theme '${{ steps.openai.outputs.slug }}-child' from prompt" || echo "No changes to commit"
            git push || echo "Push skipped"
          else
            echo "Theme directory not found, skipping commit"
          fi

      - name: Deploy to Cloudways via rsync
        run: |
          set -e
          THEME_DIR="child-themes/${{ steps.openai.outputs.slug }}-child"
          DEST="$APP_PATH/wp-content/themes/${{ steps.openai.outputs.slug }}-child"
          if [ -d "$GITHUB_WORKSPACE/$THEME_DIR" ]; then
            ssh -i ~/.ssh/id_rsa_cloudways -o StrictHostKeyChecking=no \
              "$CLOUDWAYS_USER@$CLOUDWAYS_HOST" "mkdir -p '$DEST'"
            rsync -avz --delete \
              -e "ssh -i ~/.ssh/id_rsa_cloudways -o StrictHostKeyChecking=no" \
              "$GITHUB_WORKSPACE/$THEME_DIR/" \
              "$CLOUDWAYS_USER@$CLOUDWAYS_HOST:$DEST/"
            echo "✅ Deployed to: $DEST/"
          else
            echo "⚠️ Theme directory not found locally, skipping deployment"
          fi

      - name: Activate Theme
        run: |
          ssh -i ~/.ssh/id_rsa_cloudways -o StrictHostKeyChecking=no \
            "$CLOUDWAYS_USER@$CLOUDWAYS_HOST" \
            "cd '$APP_PATH' && wp theme activate '${{ steps.openai.outputs.slug }}-child' --allow-root"
          ssh -i ~/.ssh/id_rsa_cloudways -o StrictHostKeyChecking=no \
            $CLOUDWAYS_USER@$CLOUDWAYS_HOST \
            "cd $APP_PATH && wp theme activate '${{ steps.openai.outputs.slug }}-child' --allow-root"
